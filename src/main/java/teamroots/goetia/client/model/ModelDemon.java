package teamroots.goetia.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;
import net.minecraft.entity.monster.EntityZombie;
import net.minecraft.util.math.Vec3d;
import net.minecraft.world.World;

public class ModelDemon extends ModelBase {
	ModelRenderer head1;
    ModelRenderer horn1;
    ModelRenderer horn2;
    ModelRenderer horn3;
    ModelRenderer horn4;
    ModelRenderer horn5;
    ModelRenderer horn6;
    ModelRenderer body1;
    ModelRenderer body2;
    ModelRenderer body3;
    ModelRenderer body4;
    ModelRenderer body5;
    ModelRenderer body6;
    ModelRenderer armL1;
    ModelRenderer armL2;
    ModelRenderer armR1;
    ModelRenderer armR2;
    ModelRenderer legR1;
    ModelRenderer legR2;
    ModelRenderer legL1;
    ModelRenderer legL2;
    ModelRenderer legR3;
    ModelRenderer legL3;
    ModelRenderer wingL1;
    ModelRenderer wingL2;
    ModelRenderer wingL3;
    ModelRenderer wingL4;
    ModelRenderer wingR1;
    ModelRenderer wingR2;
    ModelRenderer wingR3;
    ModelRenderer wingR4;
    
    public ModelDemon()
    {
    	textureWidth = 128;
        textureHeight = 128;
        
          head1 = new ModelRenderer(this, 0, 0);
          head1.addBox(-5F, -5F, -5F, 10, 10, 10);
          head1.setRotationPoint(0F, -15F, 0F);
          head1.setTextureSize(128, 128);
          head1.mirror = true;
          setRotation(head1, 0F, 0F, 0F);
          horn1 = new ModelRenderer(this, 80, 0);
          horn1.addBox(-2F, -5F, -2F, 4, 5, 4);
          horn1.setRotationPoint(-4.5F, -16F, 0F);
          horn1.setTextureSize(128, 128);
          horn1.mirror = true;
          setRotation(horn1, 0F, 0F, -1.308997F);
          horn2 = new ModelRenderer(this, 48, 0);
          horn2.addBox(-1F, 0F, -1F, 2, 5, 2);
          horn2.setRotationPoint(-11F, -20F, 0F);
          horn2.setTextureSize(128, 128);
          horn2.mirror = true;
          setRotation(horn2, 0F, 0F, -2.879793F);
          horn3 = new ModelRenderer(this, 96, 0);
          horn3.addBox(-1.5F, -5F, -1.5F, 3, 5, 3);
          horn3.setRotationPoint(-8.5F, -16.5F, 0F);
          horn3.setTextureSize(128, 128);
          horn3.mirror = true;
          setRotation(horn3, 0F, 0F, -0.5235988F);
          horn4 = new ModelRenderer(this, 80, 0);
          horn4.addBox(-2F, -5F, -2F, 4, 5, 4);
          horn4.setRotationPoint(4.5F, -16F, 0F);
          horn4.setTextureSize(128, 128);
          horn4.mirror = true;
          setRotation(horn4, 0F, 0F, 1.308997F);
          horn5 = new ModelRenderer(this, 96, 0);
          horn5.addBox(-1.5F, -5F, -1.5F, 3, 5, 3);
          horn5.setRotationPoint(8.5F, -16.5F, 0F);
          horn5.setTextureSize(128, 128);
          horn5.mirror = true;
          setRotation(horn5, 0F, 0F, 0.5235988F);
          horn6 = new ModelRenderer(this, 48, 0);
          horn6.addBox(-1F, 0F, -1F, 2, 5, 2);
          horn6.setRotationPoint(11F, -20F, 0F);
          horn6.setTextureSize(128, 128);
          horn6.mirror = true;
          setRotation(horn6, 0F, 0F, 2.879793F);
          body1 = new ModelRenderer(this, 48, 16);
          body1.addBox(-4F, -4F, -4F, 8, 8, 8);
          body1.setRotationPoint(-4F, -7F, 0F);
          body1.setTextureSize(128, 128);
          body1.mirror = true;
          setRotation(body1, 0F, 0F, -0.2617994F);
          body2 = new ModelRenderer(this, 48, 16);
          body2.addBox(-4F, -4F, -4F, 8, 8, 8);
          body2.setRotationPoint(4F, -7F, 0F);
          body2.setTextureSize(128, 128);
          body2.mirror = true;
          setRotation(body2, 0F, 0F, 0.2617994F);
          body3 = new ModelRenderer(this, 32, 32);
          body3.addBox(-5.5F, -4F, -3F, 11, 7, 6);
          body3.setRotationPoint(0F, -6F, 0F);
          body3.setTextureSize(128, 128);
          body3.mirror = true;
          setRotation(body3, 0F, 0F, 0F);
          body4 = new ModelRenderer(this, 32, 32);
          body4.addBox(-5.5F, 0F, -3F, 11, 8, 6);
          body4.setRotationPoint(0F, -5F, 0F);
          body4.setTextureSize(128, 128);
          body4.mirror = true;
          setRotation(body4, 0.1308997F, 0F, 0F);
          body5 = new ModelRenderer(this, 32, 64);
          body5.addBox(-4F, -4F, -5F, 8, 8, 2);
          body5.setRotationPoint(0F, -4F, 0F);
          body5.setTextureSize(128, 128);
          body5.mirror = true;
          setRotation(body5, 0F, 0F, 0F);
          body6 = new ModelRenderer(this, 32, 64);
          body6.addBox(-4F, -4F, 3F, 8, 8, 2);
          body6.setRotationPoint(0F, -4F, 0F);
          body6.setTextureSize(128, 128);
          body6.mirror = true;
          setRotation(body6, 0F, 0F, 0F);
          armL1 = new ModelRenderer(this, 32, 48);
          armL1.addBox(-3.5F, -3.5F, -3.5F, 7, 7, 7);
          armL1.setRotationPoint(8F, -9F, 0F);
          armL1.setTextureSize(128, 128);
          armL1.mirror = true;
          setRotation(armL1, 0F, 0F, -0.5235988F);
          armL2 = new ModelRenderer(this, 0, 32);
          armL2.addBox(-3F, 0F, -3F, 6, 16, 6);
          armL2.setRotationPoint(0F, 0F, 0F);
          armL2.setTextureSize(128, 128);
          armL2.mirror = true;
          setRotation(armL2, 0F, 0F, 0F);
          armR1 = new ModelRenderer(this, 32, 48);
          armR1.addBox(-3.5F, -3.5F, -3.5F, 7, 7, 7);
          armR1.setRotationPoint(-8F, -9F, 0F);
          armR1.setTextureSize(128, 128);
          armR1.mirror = true;
          setRotation(armR1, 0F, 0F, 0.5235988F);
          armR2 = new ModelRenderer(this, 0, 32);
          armR2.addBox(-3F, 0F, -3F, 6, 16, 6);
          armR2.setRotationPoint(0F, 0F, 0F);
          armR2.setTextureSize(128, 128);
          armR2.mirror = true;
          setRotation(armR2, 0F, 0F, 0F);
          legR1 = new ModelRenderer(this, 48, 16);
          legR1.addBox(-4F, 0F, -4F, 8, 8, 8);
          legR1.setRotationPoint(-4F, 1.5F, 1F);
          legR1.setTextureSize(128, 128);
          legR1.mirror = true;
          setRotation(legR1, -0.2617994F, 0F, 0.2617994F);
          legR2 = new ModelRenderer(this, 48, 16);
          legR2.addBox(-3.5F, 0F, -3.5F, 7, 7, 7);
          legR2.setRotationPoint(-0.5F, 3.5F, -0.5F);
          legR2.setTextureSize(128, 128);
          legR2.mirror = true;
          setRotation(legR2, 0.2617994F, 0F, -0.1308998F);
          legR3 = new ModelRenderer(this, 0, 64);
          legR3.addBox(-3F, 0F, -3F, 6, 12, 6);
          legR3.setRotationPoint(0.5F, 8.5F, 0F);
          legR3.setTextureSize(128, 128);
          legR3.mirror = true;
          setRotation(legR3, 3F*0.1308997F, 0F, -0.2617994F);
          legL1 = new ModelRenderer(this, 48, 16);
          legL1.addBox(-4F, 0F, -4F, 8, 8, 8);
          legL1.setRotationPoint(4F, 1.5F, 1F);
          legL1.setTextureSize(128, 128);
          legL1.mirror = true;
          setRotation(legL1, -0.2617994F, 0F, -0.2617994F);
          legL2 = new ModelRenderer(this, 48, 16);
          legL2.addBox(-3.5F, 0F, -3.5F, 7, 7, 7);
          legL2.setRotationPoint(0.5F, 3.5F, -0.5F);
          legL2.setTextureSize(128, 128);
          legL2.mirror = true;
          setRotation(legL2, 0.2617994F, 0F, 0.1308997F);
          legL3 = new ModelRenderer(this, 0, 64);
          legL3.addBox(-3F, 0F, -3F, 6, 12, 6);
          legL3.setRotationPoint(-0.5F, 8.5F, 0F);
          legL3.setTextureSize(128, 128);
          legL3.mirror = true;
          setRotation(legL3, 3F*0.1308997F, 0F, 0.2617994F);
          wingL1 = new ModelRenderer(this, 0, 96);
          wingL1.addBox(-2F, 0F, -2F, 4, 14, 4);
          wingL1.setRotationPoint(4F, -7F, 2F);
          wingL1.setTextureSize(128, 128);
          wingL1.mirror = true;
          setRotation(wingL1, 2.356194F, 0.5235988F, 0F);
          wingL2 = new ModelRenderer(this, 96, 32);
          wingL2.addBox(-3F, 11F, -3F, 6, 6, 6);
          wingL2.setRotationPoint(4F, -7F, 2F);
          wingL2.setTextureSize(128, 128);
          wingL2.mirror = true;
          setRotation(wingL2, 2.356194F, 0.5235988F, 0F);
          wingL3 = new ModelRenderer(this, 16, 96);
          wingL3.addBox(-2F, 12F, -14F, 4, 4, 14);
          wingL3.setRotationPoint(-4F, -7F, 2F);
          wingL3.setTextureSize(128, 128);
          wingL3.mirror = true;
          setRotation(wingL3, 2.356194F, -0.5235988F, 0F);
          wingL4 = new ModelRenderer(this, 96, 48);
          wingL4.addBox(-0.5F, 1F, -13F, 1, 11, 11);
          wingL4.setRotationPoint(4F, -7F, 2F);
          wingL4.setTextureSize(128, 128);
          wingL4.mirror = true;
          setRotation(wingL4, 2.356194F, 0.5235988F, 0F);
          wingR1 = new ModelRenderer(this, 0, 96);
          wingR1.addBox(-2F, 0F, -2F, 4, 14, 4);
          wingR1.setRotationPoint(-4F, -7F, 2F);
          wingR1.setTextureSize(128, 128);
          wingR1.mirror = true;
          setRotation(wingR1, 2.356194F, -0.5235988F, 0F);
          wingR2 = new ModelRenderer(this, 96, 32);
          wingR2.addBox(-3F, 11F, -3F, 6, 6, 6);
          wingR2.setRotationPoint(-4F, -7F, 2F);
          wingR2.setTextureSize(128, 128);
          wingR2.mirror = true;
          setRotation(wingR2, 2.356194F, -0.5235988F, 0F);
          wingR3 = new ModelRenderer(this, 16, 96);
          wingR3.addBox(-2F, 12F, -14F, 4, 4, 14);
          wingR3.setRotationPoint(4F, -7F, 2F);
          wingR3.setTextureSize(128, 128);
          wingR3.mirror = true;
          setRotation(wingR3, 2.356194F, 0.5235988F, 0F);
          wingR4 = new ModelRenderer(this, 96, 48);
          wingR4.addBox(-0.5F, 1F, -13F, 1, 11, 11);
          wingR4.setRotationPoint(-4F, -7F, 2F);
          wingR4.setTextureSize(128, 128);
          wingR4.mirror = true;
          setRotation(wingR4, 2.356194F, -0.5235988F, 0F);
        
        legL1.addChild(legL2);
        legL1.addChild(legL3);
        legR1.addChild(legR2);
        legR1.addChild(legR3);
        armL1.addChild(armL2);
        armR1.addChild(armR2);
    }
    
    public void render(Entity entity, float f, float f1, float age, float f3, float f4, float f5)
    {
      float speed = (float) ((new Vec3d(entity.motionX,0,entity.motionZ)).lengthVector() * 3.0f);
      GlStateManager.translate(0, 0.15, 0);
      super.render(entity, f, f1, age, f3, f4, f5);
      setRotationAngles(f, f1, age, f3, f4, f5);
      head1.render(f5);
      horn1.render(f5);
      horn2.render(f5);
      horn3.render(f5);
      horn4.render(f5);
      horn5.render(f5);
      horn6.render(f5);
      body1.render(f5);
      body2.render(f5);
      body3.render(f5);
      body4.render(f5);
      body5.render(f5);
      body6.render(f5);
      GlStateManager.rotate(speed*60f*(float) Math.sin(Math.toRadians(age % 360)*24F), 1, 0, 0);
      armR1.render(f5);
      GlStateManager.rotate(-120f*speed*(float) Math.sin(Math.toRadians(age % 360)*24F), 1, 0, 0);
      armL1.render(f5);
      GlStateManager.rotate(speed*60f*(float) Math.sin(Math.toRadians(age % 360)*24F), 1, 0, 0);
      GlStateManager.rotate(speed*60f*(float) Math.sin(Math.toRadians(age % 360)*24F), 1, 0, 0);
      legL1.render(f5);
      GlStateManager.rotate(-120f*speed*(float) Math.sin(Math.toRadians(age % 360)*24F), 1, 0, 0);
      legR1.render(f5);
      GlStateManager.rotate(speed*60f*(float) Math.sin(Math.toRadians(age % 360)*24F), 1, 0, 0);
      GlStateManager.rotate(30F*(float)Math.abs(Math.sin(Math.toRadians(age % 360)*15F)), 0, 1, 0);
      wingL1.render(f5);
      wingL2.render(f5);
      wingR3.render(f5);
      wingL4.render(f5);
      GlStateManager.rotate(-60F*(float)Math.abs(Math.sin(Math.toRadians(age % 360)*15F)), 0, 1, 0);
      wingR1.render(f5);
      wingR2.render(f5);
      wingL3.render(f5);
      wingR4.render(f5);
      GlStateManager.rotate(30F*(float)Math.abs(Math.sin(Math.toRadians(age % 360)*15F)), 0, 1, 0);
      GlStateManager.translate(0, -0.15, 0);
    }
    
    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
      model.rotateAngleX = x;
      model.rotateAngleY = y;
      model.rotateAngleZ = z;
    }
    
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
    {
      super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    }
}
